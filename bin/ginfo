#!/bin/sh

#return the git repo and current branch in the form:
#
#	gitRepo/currentBranch
#
#written by Ben Gillies

function isGit() {
	dir=$1
	if [ -d "${dir}/.git" ]; then
		repoName=$(echo $dir | awk 'BEGIN{FS="/"}{print $NF;}')
		echo $repoName
	elif [ "$dir" == "/" ]; then
		echo ""
	else
		newDir=$(echo $dir | sed "s/\/[^\/]*$//")
		if [ "$newDir" != "" ]; then
			tryAgain=$(isGit $newDir)
			echo $tryAgain
		else
			echo ""
		fi
	fi
}

currDir=$1
if [ -z "$currDir" ]; then
	currDir=$(pwd)
fi

gitRepo=$(isGit $currDir)

if [ "$gitRepo" != "" ]; then
	gitBranch=$(cd $currDir && git branch | sed "/^[^\*].*/d" | sed "s/^\* //")
	gitStatus=$(echo $(git status --porcelain | sed 's/^[A-Z]\{2\}/C/' | sed 's/^R/s/' | sed 's/A/s/' | sed 's/^D/s/' | sed 's/^ D/m/' | sed 's/^M/s/' | sed 's/^ M/m/' | sed 's/^??/u/' | cut -d ' ' -f 1 | sort | uniq) | sed 's/ //g')
	if [ -z "`git status | head -n 2 | tail -n 1 | grep "ahead of 'origin"`" ]; then
		gitPushStatus=''
	else
		gitPushStatus='p'
	fi

	if [ "$gitPushStatus$gitStatus" != "" ]; then
		gitShortFlag="[$gitPushStatus$gitStatus]"
	fi

	echo "$gitBranch$gitShortFlag"
fi
