#!/bin/bash
#
# Test the specified QUnit file using the qunit-testrunner.js file specified
# if not present, download the file to the same directory as this script
#
# uses PhantomJS (http://www.phantomjs.org/)
#
# written by Ben Gillies

BASE_DIR=$(dirname $0)
TESTRUNNER=$BASE_DIR/qunit-testrunner.js

function newTestSuite {
	if [ ! -d 'test' ]; then
		mkdir test
	fi

	if [ ! -f 'test/fixtures.js' ]; then
		touch test/fixtures.js
	fi

	if [ ! -f 'test/index.html' ]; then
		cat > test/index.html << EOF
<!DOCTYPE HTML>
<html lang="en">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<title>Test Suite</title>
		<link rel="stylesheet" type="text/css" href="lib/qunit.css">
	</head>

	<body>
		<h1 id="qunit-header">Test Suite</h1>
		<h2 id="qunit-banner"></h2>
		<h2 id="qunit-userAgent"></h2>
		<ol id="qunit-tests"></ol>

		<!--load QUnit and dependencies-->
		<script src="lib/qunit.js" type="text/javascript"></script>
		<script src="lib/jquery.js" type="text/javascript"></script>


		<!--load your scripts in here-->
		<script src="fixtures.js" type="text/javascript"></script>

		<!--load tests-->
		<script src="test_main.js" type="text/javascript"></script>
	</body>
</html>
EOF
	fi

	if [ ! -f test/test_main.js ]; then
		touch test/test_main.js
	fi

	if [ ! -d test/lib ]; then
		mkdir test/lib
		curl -o test/lib/qunit.js \
			https://raw.github.com/jquery/qunit/master/qunit/qunit.js
		curl -o test/lib/qunit.css \
			https://raw.github.com/jquery/qunit/master/qunit/qunit.css
		curl -o test/lib/jquery.js \
			http://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.js
	fi

	if [ ! -f Makefile ]; then
		touch Makefile
	fi

	if ! grep '^\.PHONY' Makefile; then
		echo -e "\n.PHONY: test" >> Makefile
	elif ! grep '^\.PHONY:.*test' Makefile; then
		sed -i '' 's/^\.PHONY: /.PHONY: test /' Makefile
	fi

	if ! grep '^test:' Makefile; then
		echo -e "\ntest:\n\tqunit test/index.html\n" >> Makefile
	fi
}

function addScriptFile {
	NEWSCRIPT=$(echo "		<script src=\"../$1\" type=\"text/javascript\"><\/script>")
	MODSCRIPT=$(cat test/index.html | sed "s|^		<script src=\"fixtures|\\`echo "$NEWSCRIPT"`速		<script src=\"fixtures|g" | tr '速' '\n')
	echo "$MODSCRIPT" > test/index.html
}


function addTestFile {
	NEWNAME="test_$1.js"
	touch test/$NEWNAME
	NEWSCRIPT=$(echo "		<script src=\"$NEWNAME\" type=\"text/javascript\"><\/script>")
	MODSCRIPT=$(cat test/index.html | sed "s|^	<\/body>|\\`echo "$NEWSCRIPT"`速	<\/body>|g" | tr '速' '\n')
	echo "$MODSCRIPT" > test/index.html
}

function runTests {
	if [ ! -f $TESTRUNNER ]; then
		curl -o $TESTRUNNER https://raw.github.com/bengillies/homedir/master/bin/qunit-testrunner.js
	fi

	RESULT=$(phantomjs $TESTRUNNER $1)

# Make the result green on success and red on error
	if echo $RESULT | tail -1 | grep 'Failed: 0' > /dev/null; then
		echo "$(tput setaf 2)$RESULT$(tput sgr0)"
	else
		DETAILS=$(echo "$RESULT" | sed '$d' | sed '$d')
		FINAL=$(echo "$RESULT" | tail -2)
		echo -e "$DETAILS\n$(tput setaf 1)$FINAL$(tput sgr0)"
	fi
}

NOFLAGS=true
while getopts ":n :a: :t:" opt; do
	NOFLAGS=false
	case $opt in

		n)
			newTestSuite
			;;

		a)
			addScriptFile $OPTARG
			;;

		t)
			addTestFile $OPTARG
			;;

		\?)
			echo "Incorrect Usage." >&2
			echo "qunit -n --> new test suite"
			echo "qunit -a path/to/file --> add script file to dependencies"
			echo "qunit -t testName --> create test_testName.js and add to tests"
			exit 1
			;;

	esac
done

if [ "$NOFLAGS" == true ]; then
	runTests $1
fi
