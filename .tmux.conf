# set default action binding to C-a
set -g prefix C-a

# set 256 colors
set -g default-terminal "screen-256color"

# set a default command for copy/paste to work
set-option -g default-command "reattach-to-user-namespace -l zsh"

# set up some default windows
new-session -s main

# remap split window keys
unbind %
unbind '"'
bind | split-window -h -c '#{pane_current_path}'
bind _ split-window -v -c '#{pane_current_path}'

# bind C-a C-a to switch between last active windows
unbind l
bind-key C-a last-window

# set C-a a to send C-a to session
bind-key a send-prefix

# set the scrollback to _a lot_
set -g history-limit 10000

# set window indexing to start at 0
set -g base-index 0

# bind Enter and y in scrollback mode to copy to clipboard
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-pipe "reattach-to-user-namespace pbcopy"
unbind -t vi-copy Enter
bind -t vi-copy Enter copy-pipe "reattach-to-user-namespace"

# set the escape key wait time to 0
set-option -sg escape-time 0

# set up the status bar colors
set -g status-bg black
set -g status-fg white
set-window-option -g window-status-current-fg red
set-window-option -g window-status-current-bg black

# set the status bar up
set -g status-left "[#[fg=green,dim] #H #[default]]["
set -g status-left-length 26
set -g status-justify centre
set -g status-right '][#[fg=green,dim] %H:%M %d-%b #[default]]'
set -g status-right-length 60

# set the status bar to redraw every second
set -g status-interval 1

# use the vim motion keys to move between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# set vim motion keys while in copy mode
setw -g mode-keys vi

# resize vertical windows
bind < resize-pane -L 5
bind > resize-pane -R 5

# resize horizontal windows
bind - resize-pane -U 5
bind + resize-pane -D 5

# notify on window activity
setw -g monitor-activity on
set -g visual-activity on

# set main-pane default width and heights
setw -g main-pane-width 140
setw -g main-pane-height 35

# always show the largest possible screen
setw -g aggressive-resize on

# bind meta keys

# new panes
bind-key -n 'M-_' split-window -v -c '#{pane_current_path}'
bind-key -n 'M--' split-window -v -c '#{pane_current_path}'
bind-key -n 'M-|' split-window -h -c '#{pane_current_path}'
bind-key -n M-\ split-window -h -c '#{pane_current_path}'

# move between panes
bind-key -n 'M-h' select-pane -L
bind-key -n 'M-j' select-pane -D
bind-key -n 'M-k' select-pane -U
bind-key -n 'M-l' select-pane -R

# toggle lastwindows
bind-key -n 'M-a' last-window

# resize panes
bind-key -n 'M-Left' resize-pane -L 5
bind-key -n 'M-Right' resize-pane -R 5
bind-key -n 'M-Up' resize-pane -U 2
bind-key -n 'M-Down' resize-pane -D 2

# new window
bind-key -n 'M-C' new-window
bind-key -n 'M-c' new-window -c '#{pane_current_path}'

# move between windows
bind-key -n 'M-n' next-window
bind-key -n 'M-p' previous-window

# swap pane with top-left pane
bind-key -n 'M-Enter' swap-pane -s :. -t top-left \; select-pane -t :.0

# swap pane downwards
bind-key -n 'M-Space' swap-pane -D

# move to next pane
bind-key -n 'M-o' select-pane -t :.+

# move directly to a window
bind-key -n 'M-0'  select-window -t :0
bind-key -n 'M-1'  select-window -t :1
bind-key -n 'M-2'  select-window -t :2
bind-key -n 'M-e'  select-window -t :3
bind-key -n 'M-4'  select-window -t :4
bind-key -n 'M-5'  select-window -t :5
bind-key -n 'M-6'  select-window -t :6
bind-key -n 'M-7'  select-window -t :7
bind-key -n 'M-8'  select-window -t :8
bind-key -n 'M-9'  select-window -t :9

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# manual clear screen with C-a C-l
bind 'C-l' send-keys 'C-l'


# initial window/pane layout
source-file ~/.tmux-init
